/* The marketing team wants to reward the most loyal users, i.e., those who have been using the platform for the longest time.
We have to Identify the five oldest users on Instagram from the provided database*/

SELECT * FROM users
ORDER BY created_at
LIMIT 5 ;
 

/* The team wants to encourage inactive users to start posting by sending them promotional emails.
Identify users who have never posted a single photo on Instagram */

SELECT u.* FROM users u
WHERE u.id NOT IN (SELECT p.user_id FROM photos p);


/* The team has organized a contest where the user with the most likes on a single photo wins.
Need to check who Wins */

SELECT ANY_VALUE(u.username) AS username, l.photo_id, count(*) AS total_likes
FROM likes l 
JOIN users u ON l.user_id = u.id
GROUP BY photo_id
ORDER BY total_likes desc
LIMIT 1;
(NOTE: We have used ANY_VALUE function as we were unable to add ‘username’ in SELECT list, after addin GROUP_BY clause)


/* A partner brand wants to know the most popular hashtags to use in their posts to reach the most people */

SELECT pt.tag_id, t.tag_name, COUNT(*) AS total_tags
FROM photo_tags pt JOIN tags t 
ON pt.tag_id = t.id
GROUP BY pt.tag_id
ORDER BY COUNT(*) DESC LIMIT 5;


/* The team wants to know the best day of the week to launch ads.
Determine the day of the week when most users register on Instagram */

SELECT DAYNAME(created_at) AS day_of_week, COUNT(*) AS total_count 
FROM users
GROUP BY day_of_week
ORDER BY total_count DESC
LIMIT 1;


/* Investors want to know if users are still active and posting on Instagram or if they are making fewer posts.
Calculate the average number of posts per user on Instagram */

SELECT * FROM users;
SELECT * FROM photos;

SELECT (SELECT COUNT(*) FROM photos)/(SELECT COUNT (*) FROM users) AS avg_post_per_user;


/* Investors want to know if the platform is crowded with fake and dummy accounts.
Identify users (potential bots) who have liked every single photo (as this is not typically possible for a normal user) */

SELECT user_id, COUNT(*) AS total_likes FROM likes
GROUP BY user_id
ORDER BY COUNT(*) DESC;







